###########
# BUILDER #
###########

# pull official base image
FROM python:3.8-slim as builder

# set work directory
WORKDIR /usr/src/app

# install psycopg2 dependencies
RUN apt-get update \
    && apt-get install -y postgresql gcc python3-dev musl-dev git

# set environment variables
ENV PYTHONUNBUFFERED 1

RUN pip install --upgrade pip
COPY . .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8-slim

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN groupadd app && useradd -g app app

# update and install venv
RUN apt-get update && apt-get install -y netcat python3-venv

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME && \
    mkdir $APP_HOME/static && \
    mkdir $APP_HOME/logs && \
    mkdir $HOME/files  && \
    mkdir $HOME/files/thumb
WORKDIR $APP_HOME

# copy entrypoint.sh
COPY ./entrypoint.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $HOME

# change to the app user
USER app

# create venv
ENV VIRTUAL_ENV=$APP_HOME/env
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# install dependencies
COPY --chown=app:app --from=builder /usr/src/app/wheels /wheels
COPY --chown=app:app --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# run entrypoint.sh
ENTRYPOINT ["/home/app/web/entrypoint.sh"]
